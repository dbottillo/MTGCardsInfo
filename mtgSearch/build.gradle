buildscript {
    ext.dagger_version = '2.1'
    ext.support_library_version = '23.4.0'
    ext.leak_canary_version = '1.4-SNAPSHOT'
    ext.power_mock = '1.6.4'
    ext.gson_version = '2.6.2'
    ext.firebase_version = '9.0.2'
    ext.espresso_version = '2.2.2'
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.20.0'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'io.fabric'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def checkstyleConfigDir = new File(buildscript.sourceFile.parentFile, 'config/checkstyle')
def keystorePropertiesFile = rootProject.file("keystore.properties");
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    defaultConfig {
        applicationId 'com.dbottillo.mtgsearchfree'
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 46
        versionName "2.7.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debugConfig {
            keyAlias 'androiddebugkey'
            storeFile file('../debug.keystore')
            keyPassword 'android'
            storePassword 'android'
        }

        releaseConfig {
            keyAlias 'dbottillo'
            storeFile file('../dbottillo.keystore')
            keyPassword keystoreProperties['keyPassword']
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "_dev"
            signingConfig signingConfigs.debugConfig
            debuggable true
            buildConfigField 'int', 'DATABASE_VERSION', '16'
            buildConfigField 'Boolean', 'LOG_THREAD', 'false'
            buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
            lintOptions {
                abortOnError false
            }
        }
        beta {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.releaseConfig
            buildConfigField 'int', 'DATABASE_VERSION', '16'
            buildConfigField 'Boolean', 'LOG_THREAD', 'false'
            buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.releaseConfig
            buildConfigField 'int', 'DATABASE_VERSION', '16'
            buildConfigField 'Boolean', 'LOG_THREAD', 'false'
            buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        }
    }

    productFlavors {
        dev {
            minSdkVersion 21
        }
        prod {
            minSdkVersion 16
        }
    }

    lintOptions {
        xmlReport false
        checkAllWarnings true
        lintConfig file("config/lint/lint.xml")
        ignore 'RtlHardcoded', 'RtlEnabled', 'RtlSymmetry', 'SelectableText'
    }
}

dependencies {
    compile "com.android.support:support-v4:$support_library_version"
    compile "com.android.support:appcompat-v7:$support_library_version"
    compile "com.google.firebase:firebase-core:$firebase_version"
    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile "com.android.support:cardview-v7:$support_library_version"
    compile "com.android.support:recyclerview-v7:$support_library_version"
    compile "com.android.support:design:$support_library_version"
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.0'
    compile "com.google.code.gson:gson:$gson_version"
    compile "com.google.dagger:dagger:$dagger_version"
    apt "com.google.dagger:dagger-compiler:$dagger_version"

    compile('com.crashlytics.sdk.android:crashlytics:2.4.0@aar') {
        transitive = true
    }

    debugCompile "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"
    betaCompile "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'commons-io:commons-io:2.0'
    testCompile 'org.easytesting:fest-assert-core:2.0M10'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile "com.android.support:support-annotations:$support_library_version"
    testCompile "com.android.support:appcompat-v7:$support_library_version"
    testCompile "com.android.support:recyclerview-v7:$support_library_version"
    testCompile "com.android.support:design:$support_library_version"
    testCompile "org.powermock:powermock-module-junit4:$power_mock"
    testCompile "org.powermock:powermock-module-junit4-rule:$power_mock"
    testCompile "org.powermock:powermock-api-mockito:$power_mock"
    testCompile "org.powermock:powermock-classloading-xstream:$power_mock"
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espresso_version"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$espresso_version"
    androidTestCompile "com.android.support:support-annotations:$support_library_version"
    androidTestCompile "com.android.support:appcompat-v7:$support_library_version"
    androidTestCompile "com.android.support:recyclerview-v7:$support_library_version"
    androidTestCompile "com.android.support:design:$support_library_version"
}

task checkstyle(type: Checkstyle) {
    configFile = new File(checkstyleConfigDir, "checkstyle.xml")
    configProperties.checkstyleConfigDir = checkstyleConfigDir
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

task findbugs(type: FindBugs, dependsOn: assembleDebug) {

    description 'Run findbugs'
    group 'verification'

    classes = fileTree('build/intermediates/classes/debug/')
    source = fileTree('src/main/java')
    classpath = files()

    effort = 'max'

    excludeFilter = file("./config/findbugs/exclude.xml")

    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task pmd(type: Pmd, dependsOn: assembleDebug) {

    description 'Run pmd'
    group 'verification'

    ruleSetFiles = files("./config/pmd/pmd-ruleset.xml")
    ruleSets = []
    source = fileTree('src/main/java')

    reports {
        xml.enabled = false
        html.enabled = true
    }
}

check.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'

apply plugin: 'com.google.gms.google-services'