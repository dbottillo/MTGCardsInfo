buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 23
        versionName "2.1.5"
        applicationId "com.dbottillo.mtgsearchfree"
    }

    signingConfigs {
        debugConfig {
            keyAlias 'androiddebugkey'
            storeFile file('../debug.keystore')
            keyPassword 'android'
            storePassword 'android'
        }

        releaseConfig {
            keyAlias 'dbottillo'
            storeFile file('../dbottillo.keystore')
            keyPassword ''
            storePassword ''
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "_dev"
            signingConfig signingConfigs.debugConfig
            debuggable true
            buildConfigField 'int', 'DATABASE_VERSION', '8'
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.releaseConfig
            buildConfigField 'int', 'DATABASE_VERSION', '8'
        }
    }
}

task readPasswordFromInput << {
    def console = System.console()
    if (console == null)
        throw new IllegalStateException('no console available, use --no-daemon flag')

    ext.keystorePassword = console.readLine('\n\n\n> Enter keystore password: ')

    android.signingConfigs.releaseConfig.storePassword = ext.keystorePassword
    android.signingConfigs.releaseConfig.keyPassword = ext.keystorePassword
}

/*tasks.whenTaskAdded { task ->
    if (task.name == 'assembleHearthstoneRelease' || task.name == 'assembleMagicRelease')
        task.dependsOn readPasswordFromInput
}*/

tasks.whenTaskAdded { task ->
    if (task.name == 'validateReleaseConfigSigning') {
        task.dependsOn readPasswordFromInput
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:22.2.0'
    compile 'com.google.android.gms:play-services-analytics:7.5.0'
    compile 'com.readystatesoftware.sqliteasset:sqliteassethelper:+'
    compile 'com.github.castorflex.smoothprogressbar:library:0.3.3'
    compile "com.android.support:appcompat-v7:22.2.0"
    compile 'com.squareup.picasso:picasso:2.3.4'
    compile 'com.android.support:cardview-v7:22.2.0'
    compile 'com.android.support:design:22.2.0'

    // Crashlytics Kit
    compile('com.crashlytics.sdk.android:crashlytics:2.3.2@aar') {
        transitive = true
    }

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
}
